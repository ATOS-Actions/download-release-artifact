name: 'Download Release Artifact'
description: 'Download a release artifact that was previously uploaded in the workflow by the upload-artifact action'

inputs:
  name:
    description: 'Artifact name'
    required: true
  path:
    description: 'Destination path'
    required: false
    default: '.'
  tag:
    description: The release tag to download from
    required: true
  token:
    description: Github personal access token with repo permissions
    required: false
    default: ${{ github.token }}

runs:
  using: composite
  steps:
    - id: path
      name: '📁 Create destination path'
      shell: bash
      if: inputs.path != '.'
      run: mkdir -p ${{ inputs.path }}

    - id: release_info
      name: '📑 Get release info'
      shell: bash
      env:
        RELEASE_URL: ${{github.api_url}}/repos/${{ github.repository }}/releases/tags/${{ inputs.tag }}
      run: |
        # Retrieve the release's details
        RELEASE_INFO=$(curl -s -H "Authorization: token ${{ inputs.token }}" ${{ inputs.RELEASE_URL }})
        echo RELEASE_INFO=$RELEASE_INFO >> $GITHUB_ENV

    - id: get_artifact_url
      name: '🔗 Get Artifact URL'
      shell: bash
      working-directory: ${{ inputs.path }}
      run: |
        ASSET_URL=$(${{ env.RELEASE_INFO}} | jq ".assets[] | select(.name==\"${{ inputs.name }}\") | .url" | sed 's/\"//g')
        echo ASSET_URL=$ASSET_URL >> $GITHUB_ENV

    - id: get_artifact
      name: '📥 Download Artifact'
      shell: bash
      working-directory: ${{ inputs.path }}
      run: |
        curl -vLJO -H 'Accept: application/octet-stream' \
          -H "Authorization: token ${{ inputs.token }}" \
          "${{ env.ASSET_URL }}?access_token=${{ inputs.token }}"
